#include <stdio.h>
#include <stdlib.h>

int main() {
    int n, i, j, head, size, direction, total = 0;

    printf("Enter the number of disk requests: ");
    scanf("%d", &n);

    int req[n];
    printf("Enter the disk request sequence: ");
    for (i = 0; i < n; i++) {
        scanf("%d", &req[i]);
    }

    printf("Enter the initial head position: ");
    scanf("%d", &head);

    printf("Enter the total disk size: ");
    scanf("%d", &size);

    printf("Enter the head movement direction (1 for high, 0 for low): ");
    scanf("%d", &direction);

    // Add head and boundary (0 and size-1) into requests
    int temp[n + 3], idx = 0;
    for (i = 0; i < n; i++)
        temp[idx++] = req[i];
    temp[idx++] = head;
    temp[idx++] = 0;
    temp[idx++] = size - 1;

    // Sort requests
    for (i = 0; i < idx - 1; i++) {
        for (j = 0; j < idx - i - 1; j++) {
            if (temp[j] > temp[j + 1]) {
                int swap = temp[j];
                temp[j] = temp[j + 1];
                temp[j + 1] = swap;
            }
        }
    }

    // Find head index in sorted list
    int pos;
    for (i = 0; i < idx; i++) {
        if (temp[i] == head) {
            pos = i;
            break;
        }
    }

    printf("\nOrder of service:\n");
    printf("%d", head);

    if (direction == 1) {  // Moving towards higher end
        for (i = pos + 1; i < idx; i++) {
            total += abs(temp[i] - head);
            head = temp[i];
            printf(" -> %d", head);
        }
        // Jump from last cylinder to 0
        total += abs((size - 1) - 0);
        head = 0;
        printf(" -> %d", head);

        for (i = 0; i < pos; i++) {
            total += abs(temp[i] - head);
            head = temp[i];
            printf(" -> %d", head);
        }
    } else {  // Moving towards lower end
        for (i = pos - 1; i >= 0; i--) {
            total += abs(temp[i] - head);
            head = temp[i];
            printf(" -> %d", head);
        }
        // Jump from 0 to last cylinder
        total += abs((size - 1) - 0);
        head = size - 1;
        printf(" -> %d", head);

        for (i = idx - 1; i > pos; i--) {
            total += abs(temp[i] - head);
            head = temp[i];
            printf(" -> %d", head);
        }
    }

    printf("\n\nTotal Head Movement = %d\n", total);
    printf("Average Head Movement = %.2f\n", (float)total / n);

    return 0;
}
